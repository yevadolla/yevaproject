## Scenario settingsScenario.name = report_routing_epidemic_fuzzyScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12h# 21600s == 6h#Scenario.endTime = 432000Scenario.endTime = 43200# Define 6 different node groupsScenario.nrofHostGroups = 1## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovement#Group.movementModel = RandomWaypointGroup.router = EpidemicRouter_fuzzy#Group.router = EpidemicRouterFuzzy_1_1Group.fcl = fcl/priority.fcl#Group.bufferSize = 5MGroup.bufferSize = 5MGroup.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 600#Group.msgTtl = 360Group.nrofHosts = 40# group1 (pedestrians) specific settingsGroup1.groupID = p## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generator#Events1.class = MessageEventGenerator#Events1.filePath = Haggle3-Infocom5.csv#Events1.select = Haggle3-Infocom5# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)# message size (100kb - 1000kb)Events1.size = 100k,1000k#Events1.size = 100k - 1M#Events1.size = 500k,1M# range of message source/destination addresses#Events1.hosts = 0,125Events1.hosts = 0,39# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 1# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = MessageStatsReport#Report.report2 = BufferOccupancyReport#Report.report2 = PercentageMessageDeliveredPerContactReport#Report.report3 = LatencyPerContactReport#Report.report4 = MessageDeliveredPerContactReport#Report.report5 = MessageDeliveryReport#Report.report6 = OverheadPerContactReport#Report.report7 = MessageDelayReport## Default settings for some routers settingsProphetRouter.secondsInTimeUnit = 30SprayAndWaitRouter.nrofCopies = 1SprayAndWaitRouter.binaryMode = true